name: Build ScanAPI Docker and deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:
  release:
    types: [ published ]
defaults:
  run:
    working-directory: starcoin-scan-api
jobs:
# JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      api: ${{ steps.filter.outputs.api }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          api:
            - 'starcoin-scan-api/**'

  build-starcoin-docker:
    name: build starcoin-scan-api docker
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: starcoin/starcoin_scan,ghcr.io/starcoinorg/starcoin_scan
          tag-sha: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          driver: docker
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_PACKAGE_TOKEN }}
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v18
        with:
          repositories: '[{ "id": "github", "url": "https://maven.pkg.github.com/starcoinorg/*" }]'
          servers: '[{ "id": "github", "username": "${{ github.actor }}", "password": "${{ secrets.GIT_PACKAGE_TOKEN }}" }]'
          output_file: settings.xml
      - name: Build and push
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          file: starcoin-scan-api/deploy/Dockerfile
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
